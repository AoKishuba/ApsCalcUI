ApsCalcUI: a calculator for optimizing shells for the Advanced Projectile
System in From the Depths. Written by Ao Kishuba: aokishuba@gmail.com
Special thanks to HerpeDerpeDerp and MrNukealizer, without whom this project
would not have been possible.

---- HOW TO RUN ----
Run the executable "ApsCalcUI".

---- TEST PARAMETERS ----
NOTE: Results for each test will be written to a text file in the ApsCalcUI
folder. Filenames are automatically generated from current time. An example
filename is "2021-07-04_09-12-11-12".

Barrel Count: number of barrels. APS cannons can have anywhere from 1-6
barrels. Additional barrels help cooling, but impose an accuracy penalty and
limit max gauge. At low calibers, barrel count is a cosmetic choice.

Minimum Gauge: smallest gauge to be tested, in mm. Must be greater than 18 mm.

Maximum Gauge: largest gauge to be tested, in mm. Must be greater than or
equal than Minimum Gauge and less than or equal to 500 mm (or the max allowed
by the barrel count, whichever is less).

1000mm APS Mod: if checked, allows the max gauge to be set as high as 1000mm.
This gauge is not possible ingame without mods.

Head Indices: modules to be put at the front of the shells to be tested. The
frontmost module on a shell is weighted in certain calculations, and can have
a large effect on shell performance. Some heads, like the Disruptor Conduit,
add functionality. Any module other than the dedicated base modules can be put
at the front of a shell, although the dedicated "Head" modules offer the best
performance for any shell type.

Base Module: module to be put at the back of the projectile (the part of the
shell which hits the target - excludes gunpowder and railgun casings). The
base modules add functionality or modify performance, and in general I
recommend using some kind of base; test with Base Bleeder versus no base if
no additional functionality is required.

Fixed Modules: modules to be included with every shell.
n.b. The input validation for fixed modules is not perfect. Please double-
check to ensure the total fixed module count adds up to 18 or less (17 if
using a base).

Variable Module Indices: the optimizer will test every possible combination
of variable modules. Examples would be Solid Body and Sabot Body for kinetic
shells, or Solid Body and Frag Body for APF pendepth.

Max Gunpowder Casings: maximum allowed number of GP casings. Note that GP
casing length is adjustable up to two decimal places, although a decimal
casing counts as a complete module for module count limit purposes.

Max Railgun Casings: maximum allowed number of RG casings. RG casings
increase the max rail draw of the shell, but are not part of the projectile,
and so do not reduce the shell velocity for a given amount of charge. This
means a shell with RG casings can be "supercharged" to go faster than it
would under its own max draw.

Max Rail Draw: maximum allowed rail draw. Note that the shell itself will
have a max draw (to simulate the maximum force the shell could withstand).
This "physical" limit is determined by the size of the shell (gauge and
number of components other than GP casings), and the optimizer will take it
into account automatically, regardless of the user-input max draw.

Min Shell Length: minimum length of the shell, exclusive.

Max Shell Length: maximum length of the shell, inclusive. Must be greater
than the smallest possible shell - ie, one with the minimum gauge, made up
only of fixed modules (the form automatically enforces this restriction).

Minimum Velocity: minimum shell velocity. Note that a high minimum velocity
may be impossible to meet within the casing and rail draw restrictions.

Minimum Effective Range: effective range is the distance a shell will travel
in its "lifetime", after which it will become useless. Particularly small
shells may have an effective range of less than 1 km, and may not be suitable
for use on certain craft.

Limit barrel length Checkbox: enables barrel length limits. Every shell has a
Barrel Length for 0.3째 Inaccuracy and a Barrel Length For Max Propellant Burn.
Enabling length limits will cause the optimizer to discard any shell whose
required minimum barrel length (for inaccuracy or propellant burn) exceeds 
the limit. The number entered can represent a fixed length (select "m" from
the dropdown) or a multiple of the gauge (select "calibers").

Pendepth Checkbox: enables the Target Armor Scheme controls. With the box
checked, the optimizer will only count shells which are capable of destroying
the target armor configuration using either kinetic or thump damage.

Damage Type: damage type to optimize.
  Kinetic. Prompts entry of target AC value(s). Note that more than one AC
  value can be entered; each will be run as a separate test.
  
  EMP, FlaK, Frag, and HE speak for themselves, but note that it is not
  possible to convert between the damage types due to the complex damage
  application models used for each type. Frag damage is shown as total 
  damage (multiply damage per frag by frag count) at 180째 frag angle.

  HEAT. Calculates HEAT damage for a shell. Note that the resulting
  configurations will be optimal for every pen metric and special factor,
  and even for HESH shells; however, the damage numbers will only match
  what is shown ingame for HEAT shells with a special factor of 1 and a
  penetration metric of 0.5.
  
  Shield Disruptor. Automatically replaces user-given Head List with the
  Disruptor Conduit Head, which is required for shield disruption. Measures
  EMP damage and shield reduction percentage (displayed in the printout as a
  decimal, where 1 = 100% shield strength reduction)


Test Type: whether to optimize for DPS per Volume or DPS per Cost. "Volume"
and "Cost" are both marginal - they include the volume (or cost) only of
components which scale linearly with number of inputs. That is to say,
components like the APS firing piece, barrels, gauge increases, ejectors, &c,
are not counted, because their proprotion of the cost depends on the size of
the gun and the Tetris skill of the builder. The components which are counted
are the loader, input, recoil absorbers, coolers, and rail chargers. Beltfed
loaders assume a fixed configuration of 1 clip and 2 inputs per loader.

Label Every Row Checkbox: whether to include labels on every row of the 
printout. Tests without row labels will print the row headers before the
actual results; these are intended to be copied into a spreadsheet, with each
loader length as its own column. For example:

	WITH LABELS				WITHOUT LABELS
	3 m					3 m
	Gauge (mm): 200				200
	Total length (mm): 3000			3000
	Length without casings: 3000		3000
	Total modules: 16			16
	GP Casing: 0				0
	RG Casing: 0				0
	Solid body: 10				10
	Frag body: 2				2
	HE body: 1				1
	Fuse: 1					1
	Head: Hollow point head			Hollow point head

Test Interval: the duration in minutes for which the gun will fire. This does
not affect the cost of the gun itself (loader, recoil, charger, cooler, 
recoil absorber, &c), but does affect ammo and fuel consumption and storage.

Storage Type: the type of containers which will be used to store materials.
The Cargo container is the most efficient, but is bulky; generic storage is
more flexible but slightly less efficient; coal has higher health and armor
but is the least efficient at storage.

PPM: Power Per Material of the engine which will supply power for railguns.
Shown ingame on the engine UI. Disabled unless Max Rail Draw > 0.

PPV: Power Per Volume of the engine which will supply power for railguns.
Shown ingame on the engine UI. Disabled unless Max Rail Draw > 0.

PPC: Power Per Cost of the engine which will supply power for railguns.
NOT SHOWN INGAME -- must be calculated manually by dividing power output by
block cost. Disabled unless Max Rail Draw > 0.

Fuel Checkbox: Check if the engine supplyning power for railguns is of a type
which requires Fuel access (as shown on the default tab of the V menu). This
includes Fuel engines and Custom jet engines. Disabled unless Max Rail Draw
> 0.

1000mm APS Mod: Check if using the 1000mm APS mod. Increases max gauge to
1000mm.

DIF Checkbox: Check if the inputs will be mounted directly to the firing
piece, as opposed to using clips. This is known as Direct Input Feed, or DIF,
and allows for longer shells (10 000mm in vanilla; 20 000mm with 1000mm APS
mod), but limits the gun to 4 inputs max, and doubles reload time.




---- OPTIMIZER OUTPUT ----
The optimizer output always begins with the test parameters entered by the 
user at runtime. Below that are the top shells for each loader length for
which any shells were generated (depending on length and gauge restrictions).
Each shell stat cluster starts with the shell length.

Gauge: gauge in mm.

Total length: length of the entire shell.

Length without casings: length of the part of the shell which will
(hopefully) hit the target.

Total modules: total APS modules used by the controller.

GP casing: number of gunpowder casings, if any. Decimal casing counts can be 
set by adjusting the "Propellant" slider in the APS ammo controller.

RG casing: number of railgun casings, if any.

Solid body/Sabot body/HE body/&c: number of each type of body module. Note 
that all fuzes share stats, so "fuze" can stand in for any type of fuze
(including Emergency ejection defuse).

Head: the module at the head of the shell (at the bottom of the controller).

Rail draw: rail draw, if any.

Velocity (m/s): shell velocity in m/s.

Effective range (m): effective range in m.

Barrel length for 0.3째 inacccuracy (m): minimum barrel length to achieve 0.3째
inaccuracy. Note that, unlike the ingame UI, the optimizer includes bonuses
from Base Bleeder and Visual Tracer in the calculation, so this number may
not match what is shown ingame. The optimizer assumes x0.72 from tracers,
which may not be the case depending on actual ROF.

Barrel length for ful propellant burn (m): same value as shown ingame.

Damage:
	Kinetic shells will show raw damage, AP, and effective damage after
		applying AC reduction.
	All chemical shells will show damage of their respective types.
	Disruptor shells will show EMP damage and shield reduction (decimal%).

Reload time: shell reload speed per intake, in seconds.

DPS: Damage per Second. See "Damage" above.

Loader volume: cubic metres taken up by the loader and input. For beltfed
loaders, the volume is 4, because beltfed performance is calculated using
a loader, clip, and two inputs.

Volumes and Costs
The various volumes and costs shown are the hypothetical amounts of each
type of block needed to support a single input. The values -- cubic metres
for volume, and materials for cost -- will almost always be decimals because
they are hypothetical and are meant to scale with the gun: rounding errors
aside, the shell with the highest DPS per volume with one input will have the
highest DPS per volume with 1,000 inputs; small guns, however, will not
have the same actual DPS per volume or cost stats, because it is not possible
to place 0.3338 cubic metres of gauge cooler.

Loader volume: volume of loader and attached input. For beltfeds, will always
be 4 -- loader, clip, and two inputs. This configuration gives good 
performance.

Cooler volume: volume of gauge coolers. Will always be 0 for shells with no
GP casings.

Charger volume: volume of rail chargers. Will always be 0 for shells with no
rail draw.

Engine volume: volume of engine needed to keep up with rail charge. Will 
always be 0 for shells with no rail draw.

Fuel access volume: volume of fuel tanks/beams needed to keep up with rail 
charge. Will always be 0 for shells with no rail draw, or if the "Fuel" 
checkbox is not checked.

Fuel storage volume: volume of material storage containers needed to hold
the materials the engine will burn as fuel. Fuel access tanks/beams hold 
enough materials to run themselves for 10 minutes, so this number will be 0
if the testing interval is <= 10 minutes, or if the shell has no rail draw.

Recoil volume: volume of recoil absorbers. Will never be 0 if the shell has
any muzzle velocity.

Ammo access volume: volume of ammo crates needed to keep up with ammo 
consumption.

Ammo storage volume: volume of material storage containers needed to hold 
the materials the gun will use as ammo. Ammo access crates hold enough 
materials to run themselves for 10 minutes, so this number will be 0 if the 
testing interval is <= 10 minutes.

The costs are the same as the volumes, with two exceptions:

Fuel burned: the amount of materials consumed by the engine to power the 
rails. Will always be 0 for shells without rail draw.

Ammo used: the amount of materials consumed by the gun as ammunition.